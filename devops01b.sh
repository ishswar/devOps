#!/bin/bash
#https://github.com/ishswar/devOps_w1

# Source first script so we can get hold of all methods 
# we pass dummy input so no output will be generated by main first script
source devops01a.sh dummy || exit 

# Print usage information 
usage()
{
cat << EOF
usage: $0 options

In order to run this script you need to pass one of below options

OPTIONS:
   -h            Show this message
   -network      Network information about this machien 
   -ram      	 Installed memory on this machine (in Gb)
   -cpu      	 CPU information of this machine 
   -volumes      Hard disk information of this machine 
EOF
}

# if no parameters were passed we exit the code after printing usage
if [[ $# -eq 0 ]] ; then
    echo 'No parameters were passed'
    printf "\n"
    usage
    exit 0
fi

#Do case insesntive search 
shopt -s nocasematch

# Go over each argument given by user 
for OPTIONS in "$@"
do

# Any options we find we define a variable and set value of 1 
# that means user wants that option 
case "$OPTIONS" in

 "-network") 
 			 net=1;;
 "-volumes") 
			 vol=1;;
 "-cpu") 
			 cpu=1;;
 "-all") 
			 all=1;;
 "-ram") 
			 mem=1;;

 "-n") 
 			 net=1;;
 "-v") 
			 vol=1;;
 "-c") 
			 cpu=1;;
 "-a") 
			 all=1;;
 "-r") 			 
			 mem=1;;
 "-h")
			usage
			exit 0;;
 *) usage;;
esac

done


# If 'all' variable is set then we just do that and skip all other parameters 
# we just call the parent script with input "all" it will print all the hardware 
# information 
if [[ -n $all ]];
	then
 	source devops01a.sh all || exit 
 else # If not 'all' then show info based on what variable was set based on above case statmnet 
 	  if [ ! -z $net ];
 	    then
		getNetWorkInfo; #This is defiend in devops01a.sh all
 	  fi

 	  if [ ! -z $vol ]
 	    then
 	   	getDiskInfo; #This is defiend in devops01a.sh all
 	  fi

 	  if [ ! -z $cpu ]
 	    then
 	   	getCPUInfo; #This is defiend in devops01a.sh all
 	  fi

 	  if [ ! -z $mem ]
 		then
 	   	getRamInfo; #This is defiend in devops01a.sh all
 	  fi
fi

